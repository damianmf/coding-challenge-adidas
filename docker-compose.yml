version: '3'

services:
  mysql:
    container_name: mysql
    image: mysql:5.7
    ports:
      - "3307:3306"
    environment:
      - MYSQL_DATABASE=my_db
      - MYSQL_ROOT_PASSWORD=password
  availability-service:
    container_name: availability-service
    build: api-availability
    command: bundle exec availability-service serve --incremental --host 0.0.0.0
    ports:
      - "4444:4444"
    expose:
      - 4444
    links:
      - mysql
    environment:
      - SPRING_DATASOURCE_URL= jdbc:mysql://mysql:3306/my_db
      - SPRING_KAFKA_BOOTSTRAP.SERVERS= kafka:9092
      - SPRING_PROFILES_ACTIVE=integration
    depends_on:
      - mysql
      - kafka
  search-service:
    container_name: search-service
    command: ["./wait-for-it.sh", "availability-service", "python", "app.py"]
    build: api-search
    ports:
      - "4000:4000"
    expose:
      - 4000
    links:
      - availability-service
    environment:
      - SPRING_KAFKA_BOOTSTRAP.SERVERS= kafka:9092
      - ADIDAS_CHALLENGE_CITY_HOSTNAME= availability-service:4444
      - WAIT_HOSTS= availability-service:4444
      - SPRING_PROFILES_ACTIVE=integration
    depends_on:
      - mysql
      - kafka
      - availability-service
    restart: on-failure
  zookeeper:
    image: "confluentinc/cp-zookeeper:5.2.1"
    environment:
      - ZOOKEEPER_CLIENT_PORT= 2128
      - ZOOKEEPER_TICK_TIME= 2000
  kafka:
    image: "confluentinc/cp-enterprise-kafka:5.2.1"
    ports:
      - '9092:9092'
      - '29094:29094'
    expose:
      - 9092
    depends_on:
      - zookeeper
    environment:
      - KAFKA_ZOOKEEPER_CONNECT= zookeeper:2128
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE= true
      - KAFKA_CREATE_TOPICS= "users:1:1,travels:1:1,trav:1:1"
      - KAFKA_ADVERTISED_LISTENERS= PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR= 1

